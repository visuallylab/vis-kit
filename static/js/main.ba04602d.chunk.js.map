{"version":3,"sources":["style.ts","Echart.tsx","Options.ts","Vis.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["titleStyle","s","fontSize","m","l","row","subtitleStyle","indicatorStyle","Echart","_ref","myChart","option","style","chart","useRef","useEffect","echarts","init","current","setOption","resize","window","addEventListener","removeEventListener","react_default","a","createElement","Object","objectSpread","height","ref","data","value","name","barOption","grid","top","xAxis","axisTick","show","axisLine","yAxis","series","type","barWidth","itemStyle","barBorderRadius","pieOption","radius","lineOption","smooth","symbol","sampling","color","areaStyle","graphic","LinearGradient","offset","multiplelineOption","markPoint","symbolSize","coord","markLine","label","formatter","lineStyle","Vis","_ref$title","title","_ref$subtitle","subtitle","_ref$indicator","indicator","_ref$size","size","_ref$mode","mode","_ref$type","_ref$style","titleStyles","margin","marginTop","subtitleStyles","indicatorStyles","display","flexDirection","boxShadow","borderRadius","position","left","textAlign","right","flex","src_Echart","App","Fragment","padding","paddingLeft","boxSizing","gridTemplateColumns","gridTemplateRows","src_Vis","gridColumn","gridRow","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba04602d.chunk.js","sourcesContent":["const padding = 0;\nconst margin = 20;\n\nexport const Size: any = {\n  s: {},\n  m: {},\n  l: {},\n  row: {},\n};\n\nexport const titleStyle: any = {\n  s: { fontSize: '12px' },\n  m: { fontSize: '20px' },\n  l: { fontSize: '40px' },\n  row: { fontSize: '12px' },\n};\n\nexport const subtitleStyle: any = {\n  s: { fontSize: '12px' },\n  m: { fontSize: '12px' },\n  l: { fontSize: '20px' },\n  row: { fontSize: '12px' },\n};\n\nexport const indicatorStyle: any = {\n  s: { fontSize: '12px' },\n  m: { fontSize: '12px' },\n  l: { fontSize: '20px' },\n  row: { fontSize: '12px' },\n};\n","import React, { useRef, useEffect, CSSProperties } from 'react';\nimport echarts from 'echarts';\n\ntype TProps = {\n  option: echarts.EChartOption;\n  style?: CSSProperties;\n};\n\nconst Echart: React.FC<TProps> = ({ option, style }) => {\n  const chart = useRef<HTMLDivElement>(null);\n  let myChart: echarts.ECharts;\n\n  useEffect(() => {\n    myChart = echarts.init(chart.current!);\n    myChart.setOption(option);\n  }, []);\n\n  useEffect(() => {\n    const resize = () => myChart.resize();\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, []);\n\n  return <div style={{ ...style, height: '100%' }} ref={chart} />;\n};\n\nexport default Echart;\n","import echarts from 'echarts';\n\nexport const data = [\n  { value: 5, name: 'Freezer' },\n  { value: 20, name: 'TV' },\n  { value: 36, name: 'Light' },\n  { value: 10, name: 'Computer' },\n  { value: 10, name: 'Hair dryer' },\n];\n\nexport const barOption = {\n  grid: {\n    top: 0,\n  },\n  xAxis: {\n    axisTick: {\n      show: false,\n    },\n    axisLine: {\n      show: false,\n    },\n    data: ['07:00', '08:00', '09:00', '10:00', '11:00'],\n  },\n  yAxis: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'bar',\n      data,\n      barWidth: 12,\n      itemStyle: {\n        barBorderRadius: [25, 25, 0, 0],\n      },\n    },\n  ],\n};\n\nexport const pieOption = {\n  grid: {\n    top: 0,\n  },\n  xAxis: {\n    axisTick: {\n      show: false,\n    },\n    axisLine: {\n      show: false,\n    },\n  },\n  yAxis: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'pie',\n      data,\n      radius: [0, '50%'],\n    },\n  ],\n};\n\nexport const lineOption = {\n  grid: {\n    top: 0,\n  },\n  xAxis: {\n    axisTick: {\n      show: false,\n    },\n    axisLine: {\n      show: false,\n    },\n    data: ['07:00', '08:00', '09:00', '10:00', '11:00'],\n  },\n  yAxis: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'line',\n      data,\n      smooth: true,\n      symbol: 'none',\n      sampling: 'average',\n      itemStyle: {\n        color: 'rgb(255, 70, 131)',\n      },\n      areaStyle: {\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color: 'rgba(25,25,200, 1)',\n          },\n          {\n            offset: 0.8,\n            color: 'rgba(255, 70, 131, 0)',\n          },\n        ]),\n      },\n    },\n  ],\n};\n\nexport const multiplelineOption = {\n  xAxis: {\n    axisTick: {\n      show: false,\n    },\n    axisLine: {\n      show: false,\n    },\n    data: ['07:00', '08:00', '09:00', '10:00', '11:00'],\n  },\n  yAxis: {\n    axisTick: {\n      show: false,\n    },\n    axisLine: {\n      show: false,\n    },\n  },\n  series: [\n    {\n      type: 'line',\n      data: [10, 24, 31, 20],\n      symbol: 'none',\n      markPoint: {\n        data: [\n          {\n            symbol: 'circle',\n            symbolSize: 20,\n            coord: ['10:00', 20],\n          },\n        ],\n      },\n      markLine: {\n        label: {\n          formatter: () => 'now',\n        },\n        data: [\n          {\n            xAxis: '10:00',\n          },\n        ],\n      },\n    },\n    {\n      type: 'line',\n      data: [51, 30, 50, 25],\n      symbol: 'none',\n      markPoint: {\n        data: [\n          {\n            symbol: 'circle',\n            symbolSize: 20,\n            coord: ['10:00', 25],\n          },\n        ],\n      },\n    },\n    {\n      type: 'line',\n      data: [null, null, null, 25, 60],\n      lineStyle: {\n        type: 'dotted',\n      },\n      symbol: 'none',\n    },\n    {\n      type: 'line',\n      data: [null, null, null, 20, 47],\n      lineStyle: {\n        type: 'dotted',\n      },\n      symbol: 'none',\n    },\n    {\n      type: 'line',\n      data: [30, 27, 61, 40],\n      symbol: 'none',\n      markPoint: {\n        data: [\n          {\n            symbol: 'circle',\n            symbolSize: 20,\n            coord: ['10:00', 40],\n          },\n        ],\n      },\n    },\n    {\n      type: 'line',\n      data: [null, null, null, 40, 52],\n      lineStyle: {\n        type: 'dotted',\n      },\n      symbol: 'none',\n    },\n  ],\n};\n","import React, { CSSProperties } from 'react';\nimport { titleStyle, subtitleStyle, indicatorStyle } from './style';\nimport Echart from './Echart';\nimport {\n  barOption,\n  lineOption,\n  pieOption,\n  multiplelineOption,\n} from './Options';\n\ninterface IProps {\n  size?: 's' | 'm' | 'l' | 'row';\n  type?: 'bar' | 'pie' | 'line' | 'multitpleline';\n  mode?: 'chart' | 'value';\n  title?: string;\n  subtitle?: string;\n  indicator?: string;\n  style?: CSSProperties;\n}\n\nconst Vis: React.FunctionComponent<IProps> = ({\n  title = 'Energy status',\n  subtitle = 'subtitle',\n  indicator = 'indicator',\n  size = 'm',\n  mode = 'chart',\n  type = 'bar',\n  style = {},\n}) => {\n  const titleStyles =\n    mode === 'chart'\n      ? titleStyle[size]\n      : {\n          fontSize: '12px',\n          margin: 0,\n          marginTop: '12px',\n        };\n  const subtitleStyles =\n    mode === 'chart'\n      ? subtitleStyle[size]\n      : {\n          fontSize: '24px',\n          marginTop: '0px',\n        };\n  const indicatorStyles =\n    mode === 'chart'\n      ? indicatorStyle[size]\n      : {\n          marginTop: '12px',\n        };\n  let option;\n\n  switch (type) {\n    case 'bar':\n      option = barOption;\n      break;\n    case 'line':\n      option = lineOption;\n      break;\n    case 'pie':\n      option = pieOption;\n      break;\n    case 'multitpleline':\n      option = multiplelineOption;\n      break;\n    default:\n      option = {};\n      break;\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '10px',\n        boxShadow: '#0000000f 2px 2px 10px 5px',\n        borderRadius: 20,\n        position: 'relative',\n        ...style,\n      }}\n    >\n      <div style={{ position: 'relative', left: 20, textAlign: 'left' }}>\n        <h1 style={titleStyles}>{title}</h1>\n        <h2 style={subtitleStyles}>{subtitle}</h2>\n      </div>\n      <div style={{ position: 'absolute', right: 20, top: 0 }}>\n        <p style={indicatorStyles}>{indicator}</p>\n      </div>\n      <div style={{ flex: 1 }}>\n        {mode === 'chart' && <Echart option={option} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Vis;\n","import React from 'react';\nimport Vis from './Vis';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <h1 style={{ padding: '20px', paddingLeft: '36px', margin: 0 }}>\n        The Dashboard\n      </h1>\n      <div\n        style={{\n          boxSizing: 'border-box',\n          height: '90%',\n          display: 'grid',\n          padding: '20px',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(300px,1fr))',\n          gridTemplateRows: 'repeat(auto-fit, minmax(80px,10%))',\n        }}\n      >\n        <Vis\n          size=\"s\"\n          mode=\"value\"\n          title=\"Total power usage\"\n          subtitle=\"36 unit\"\n          indicator=\"normal\"\n        />\n        <Vis\n          size=\"s\"\n          mode=\"value\"\n          title=\"Estimated power usage\"\n          subtitle=\"72 unit/ day\"\n          indicator=\"normal\"\n        />\n        <Vis\n          size=\"s\"\n          mode=\"value\"\n          title=\"Estimated power bill\"\n          subtitle=\"26 $/ day\"\n          indicator=\"normal\"\n        />\n        <Vis\n          size=\"s\"\n          mode=\"value\"\n          title=\"Current power usage of house\"\n          subtitle=\"Lower than average\"\n          indicator=\"normal\"\n        />\n        <Vis\n          size=\"s\"\n          mode=\"value\"\n          title=\"Current power usage of city\"\n          subtitle=\"Higher than average\"\n          indicator=\"warning\"\n        />\n        <Vis\n          size=\"s\"\n          mode=\"value\"\n          title=\"Remainding power\"\n          subtitle=\"39 unit\"\n          indicator=\"good\"\n        />\n        <Vis\n          style={{\n            gridColumn: 'span 2',\n            gridRow: 'span 3',\n          }}\n        />\n        <Vis\n          title=\"Power Billing\"\n          subtitle=\"Highest in 9:00\"\n          indicator=\"normal\"\n          type=\"line\"\n          style={{\n            gridColumn: 'span 2',\n            gridRow: 'span 3',\n          }}\n        />\n        <Vis\n          title=\"Power Usage by device\"\n          subtitle=\"Light cost most\"\n          indicator=\"normal\"\n          type=\"pie\"\n          style={{\n            gridColumn: 'span 2',\n            gridRow: 'span 3',\n          }}\n        />\n        <Vis\n          type=\"multitpleline\"\n          size=\"l\"\n          title=\"Power mintor\"\n          subtitle=\"120,000 unit/ hour\"\n          style={{\n            gridColumn: 'span 5',\n            gridRow: 'span 6',\n          }}\n        />\n        <Vis\n          type=\"bar\"\n          size=\"row\"\n          style={{ gridColumn: 'span 1', gridRow: 'span 2' }}\n        />\n        <Vis\n          type=\"line\"\n          size=\"row\"\n          style={{ gridColumn: 'span 1', gridRow: 'span 2' }}\n        />\n        <Vis\n          type=\"pie\"\n          size=\"row\"\n          style={{ gridColumn: 'span 1', gridRow: 'span 2' }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}